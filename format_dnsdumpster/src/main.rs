/*
Author: Pyro
Purpose: to take a csv of dnsdumpster data and tab format it for our word template
Info: open the xlsx from dnsdumpster and save it as a csv, then run this tool against the csv.
*/
use std::fs;
use std::env;

fn main() {
    let args: Vec<String> = env::args().collect();
    let usage = "
This is to take a csv from dnsdumpster (save it as a xlsx, then open it in libreoffice or ms office and save it as a csv) and print it out in
formatted ways to paste into obisidian or msword
USAGE:
format_dnsdumpster /path/to/csv delineator
    ";
    if args.len() != 3{
        print!("{}", usage);
    }
    else {
        let filename = &args[1];
        let delin = &args[2];
        let file_content = fs::read_to_string(filename).expect("Error creating reading file");
        let lines: Vec<&str> = file_content.split("\n").collect();
        let mut count = 0;
        for line in lines{
            if line.len() > 0{
                if count == 0{
                    println!("headers");
                    count = count + 1;
                }
                else{
                    let line_vec: Vec<&str> = line.split(",").collect();
                    let ip = line_vec[1];
                    let hostname = line_vec[0];
                    let record_type = line_vec[2];
                    if delin == &"tab".to_string(){
                        let outline = format!("{}\t{}\t{}", ip, record_type, hostname);
                        println!("{}", outline);
                    }
                    else if delin == &"newline".to_string(){
                        let outline = format!("{}\n{}\n{}", ip, record_type, hostname);
                        println!("{}", outline);
                    }
                    else{
                        let outline = format!("{}{}{}{}{}", ip, &delin, record_type, &delin, hostname);
                        println!("{}", outline); 
                    }
                }
            }
        }   
    }
}
